function f=CalibSys(x)
for j=1:size(x,2)
    if any(x(:,j)<=0), f([1,2],j) = inf; continue, end
    Cbar_s_ss = x(1,j);
    Cbar_b_ss = 0.5000000000000000-1.0000000000000000*Cbar_s_ss;
    if Cbar_s_ss>Cbar_b_ss || Cbar_b_ss<=0, f([1,2],j) = inf; continue, end
    a_s = x(2,j);
    a_b = (1-(1-0.5000000000000000)*a_s)/(0.5000000000000000);
    if a_b<=0, f([1,2],j) = inf; continue, end
    sigma_s = a_s*(32.7454667324338830);
    sigma_b = a_b*(5.1817034501093975);
    lambda_s_ss = (Cbar_s_ss/(0.0486318915302361))^(1/(1/0.4730000000000000+sigma_s));
    lambda_b_ss = 1.0076079738110895*lambda_s_ss;
    Y_ss = 0.2547958377981888*lambda_s_ss^(2.1141649048625792);
    b_ss = 0.2000000000000000*Y_ss;
    K_ss = (0.5000000000000000*lambda_b_ss+0.5000000000000000*lambda_s_ss)*(1-0.2000000000000000)/(0.3489493269944317)*Y_ss/1.0000000000000000;
    F_ss = (0.5000000000000000*lambda_b_ss+(0.5000000000000000)*lambda_s_ss)*(1-0.2000000000000000) /(0.3489493269944317)*Y_ss;
    Csitil_ss = 0.0014834143555466/b_ss^1.0000000000000000*Y_ss;
    mu_b_ss = 1.0074170717777329/(1+1.0000000000000000*Csitil_ss*b_ss^(1.0000000000000000-1));
    b_Gy_ss = 0.1000000000000000*Y_ss;
    mu_by_ss = mu_b_ss;
    Csitily_ss = Csitil_ss;
    debtEqCheck = Cbar_b_ss*(1.0076079738110895*lambda_s_ss)^(-sigma_b)...
        -Cbar_s_ss*lambda_s_ss^(-sigma_s)-1.0153009424543444*Y_ss;
    f(1,j) = debtEqCheck;
G0 = [...
    0, 37065952384756643253/72057594037927936000*lambda_b_ss+35257857146475831387/72057594037927936000*lambda_s_ss, 0, -463324404809457999/900719925474099200*lambda_b_ss, -881446428661895767/1801439850948198400*lambda_s_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 17499136223817534819/36028797018963968000*lambda_b_ss+18396527825038946861/36028797018963968000*lambda_s_ss, 0, -437478405595438373/900719925474099200*lambda_b_ss, -459913195625973669/900719925474099200*lambda_s_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, -4138985527668099/562949953421312*K_ss, 0, 0, 0, 0, 0, -733017892086797/1125899906842624*K_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, -4886785947245313/1125899906842624*F_ss, 0, 0, 0, 0, 0, 0, -733017892086797/1125899906842624*F_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 101/8000*b_ss*mu_by_ss*(1+Csitily_ss)+101/8000*b_ss+101/8000*Csitily_ss*b_ss+101/8000*b_Gy_ss, -(-1473/4000*lambda_b_ss^(4000/419)+1473/4000*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000), -(1/8-1/4*Cbar_s_ss)*lambda_b_ss^(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s)*(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s)+1000/419*lambda_b_ss^(4000/419)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000)-(4419/3352*lambda_b_ss^(4000/419)-4419/3352*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(8419/4000)*Y_ss^(1473/1000)*lambda_b_ss^(4000/419), -2304257371472847/281474976710656*Cbar_s_ss*lambda_s_ss^(-2304257371472847/70368744177664*a_s)*a_s-1000/419*lambda_s_ss^(4000/419)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000)-(4419/3352*lambda_b_ss^(4000/419)-4419/3352*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(8419/4000)*Y_ss^(1473/1000)*lambda_s_ss^(4000/419), 6841041243008615/9223372036854775808*Y_ss+7899/8000*b_ss, -(-1/4*lambda_b_ss^(4000/419)+1/4*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000), 0, 0, 0, 0, 0, 0, -(1473/4000*lambda_b_ss^(4000/419)-1473/4000*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000), -(-1/4*lambda_b_ss^(4000/419)+1/4*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000), 0, 0, 1/2*Y_ss, -(419/16000*lambda_b_ss^(4000/419)-419/16000*lambda_s_ss^(4000/419))/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000), -(1/8-1/4*Cbar_s_ss)*lambda_b_ss^(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s), 1/4*Cbar_s_ss*lambda_s_ss^(-2304257371472847/70368744177664*a_s), 0, 6841041243008615/9223372036854775808*Y_ss;
    0, 0, Y_ss, -(1/4-1/2*Cbar_s_ss)*lambda_b_ss^(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s)*(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s), 2304257371472847/140737488355328*Cbar_s_ss*lambda_s_ss^(-2304257371472847/70368744177664*a_s)*a_s, -6841041243008615/4611686018427387904*Y_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -Y_ss, 0, 0, -(1/4-1/2*Cbar_s_ss)*lambda_b_ss^(-2917039715882137/281474976710656+2917039715882137/562949953421312*a_s), -1/2*Cbar_s_ss*lambda_s_ss^(-2304257371472847/70368744177664*a_s), 0, -6841041243008615/4611686018427387904*Y_ss;
    0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, -220/17, 0, 0, 0, 0, 0, 20000/13879*(F_ss/K_ss)^(6121/13879)*F_ss/K_ss, -20000/13879*(F_ss/K_ss)^(6121/13879)*F_ss/K_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -Y_ss, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2268501574532437/2251799813685248/(1+6841041243008615/4611686018427387904/b_ss*Y_ss), 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6841041243008615/4611686018427387904/b_ss*Y_ss;
    1, -3/2, -1/8, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;
    ];

G1 = [...
    37065952384756643253/72057594037927936000*lambda_b_ss+35257857146475831387/72057594037927936000*lambda_s_ss, 0, 0, -lambda_b_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37065952384756643253/72057594037927936000*lambda_b_ss+35257857146475831387/72057594037927936000*lambda_s_ss, 686631534761257483/461168601842738790400/(1+6841041243008615/4611686018427387904/b_ss*Y_ss)/b_ss*Y_ss*(41/80*lambda_b_ss+39/80*lambda_s_ss);
    17499136223817534819/36028797018963968000*lambda_b_ss+18396527825038946861/36028797018963968000*lambda_s_ss, 0, 0, 0, -lambda_s_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, (11293/10000*lambda_b_ss+11293/10000*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000), 23/30*lambda_b_ss/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000)-(23/60*lambda_b_ss+23/60*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000)*lambda_b_ss^(4000/419), 23/30*lambda_s_ss/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000)-(23/60*lambda_b_ss+23/60*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(4419/4000)*Y_ss^(1473/1000)*lambda_s_ss^(4000/419), 0, 0, -K_ss, 0, 0, 0, 0, 0, (-11293/10000*lambda_b_ss-11293/10000*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000), (23/30*lambda_b_ss+23/30*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000), 0, 0, 0, (-9637/120000*lambda_b_ss-9637/120000*lambda_s_ss)/(1/2*lambda_b_ss^(4000/419)+1/2*lambda_s_ss^(4000/419))^(419/4000)*Y_ss^(1473/1000), 0, 0, 0, 0;
    0, 0, (2/5*lambda_b_ss+2/5*lambda_s_ss)*Y_ss, 2/5*lambda_b_ss*Y_ss, 2/5*lambda_s_ss*Y_ss, 0, 0, 0, -F_ss, 0, 0, 0, 0, 0, 0, (-1/10*lambda_b_ss-1/10*lambda_s_ss)*Y_ss, 0, 0, 0, 0, 0, 0, 0;
    101/8000*b_ss*mu_by_ss*(1+Csitily_ss)+101/8000*b_ss+101/8000*Csitily_ss*b_ss+101/8000*b_Gy_ss, 0, 0, 0, 0, 101/8000*b_ss*mu_by_ss*(1+Csitily_ss)+101/8000*Csitily_ss*b_ss, 0, 0, 0, 101/8000, 101/8000*b_ss*(1+Csitily_ss), 101/8000*b_ss*mu_by_ss+101/8000*b_ss, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 33/50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3/4;
    ];

    G2 = [zeros(12,11); eye(11)];
    G3 = [eye(4);zeros(19,4)];
    const = zeros(23,1);
    [Phi1,Const,Phi2,fmat,fwt,ywt,gev,eu] = gensys(G0,G1,const,G2,G3);
    if any(eu~=1)
        if all(eu)==-2
            warning('WARNING: Coincident zeros!!!')
        elseif eu(1)~=1
            warning('WARNING: Solution does not exist!!!')
        elseif eu(2)~=1
            warning('WARNING: Solution is not unique!!!')
        end
        f(2,j) = inf; continue
    end
    shockidx = eye(11);
    irf(:,1) = Phi2*shockidx(:,1);
    for js=2:10
        irf(:,js) = Phi1*irf(:,js-1);
    end
    elast = min(irf(6,:));
        f(2,j) = elast--0.5000000000000000;
end
