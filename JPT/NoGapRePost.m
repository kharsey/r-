function [post,varargout]=NoGapRePost(x,div,verbose,fid)

% Usage:
%   post=NoGapRePost(x)
%   post=NoGapRePost(x,div)
%   post=NoGapRePost(x,div,verbose)
%   post=NoGapRePost(x,div,verbose,fid)
%   [post,StateVartt,SIGtt,G1,G2,H,ObsVarBar]=NoGapRePost(x)
%
% See also:
% MakeMats
%
% Created: 2013/11/15 

%% Initialize  some variables
StateVartt=[];SIGtt=[];G1=[];G2=[];H=[];ObsVarBar=[];

if nargout>1,varargout = {StateVartt,SIGtt,G1,G2,H,ObsVarBar};end

OpList = {};
if nargin>=2, OpList{1} = div; end
if nargin>=3, OpList{2} = verbose; end
if nargin<4, fid=1; end

if nargin==4, OpList{3} = fid; end
% Map parameters

JPTalpha = x(1);
JPTiotap = x(2);
JPTiotaw = x(3);
JPT100gamma = x(4);
JPTh = x(5);
JPTlambdap = x(6);
JPTlogL = x(7);
JPT100pi = x(8);
JPT100DiscRate = x(9);
JPTnu = x(10);
JPTxip = x(11);
JPTxiw = x(12);
JPTchi = x(13);
JPTSdd = x(14);
JPTphipi = x(15);
JPTrhoR = x(16);
JPTrhoz = x(17);
JPTrhog = x(18);
JPTrhomu = x(19);
JPTrhop = x(20);
JPTrhow = x(21);
JPTrhob = x(22);
JPTthetap = x(23);
JPTthetaw = x(24);
JPTsigmamp = x(25);
JPTsigmaz = x(26);
JPTsigmag = x(27);
JPTsigmamu = x(28);
JPTsigmap = x(29);
JPTsigmaw = x(30);
JPTsigmab = x(31);

% Evaluate priors

post = 0;
post = post + log(normpdf(JPTalpha,0.3000000000000000,0.0500000000000000));
post = post + log(betapdf(JPTiotap,5.0555555555555562,5.0555555555555562));
post = post + log(betapdf(JPTiotaw,5.0555555555555562,5.0555555555555562));
post = post + log(normpdf(JPT100gamma,0.5000000000000000,0.0250000000000000));
post = post + log(betapdf(JPTh,11.9999999999999964,11.9999999999999964));
post = post + log(normpdf(JPTlambdap,0.1500000000000000,0.0500000000000000));
post = post + log(normpdf(JPTlogL,0.0000000000000000,0.5000000000000000));
post = post + log(normpdf(JPT100pi,0.5000000000000000,0.1000000000000000));
post = post + log(gampdf(JPT100DiscRate,6.2500000000000000,0.0400000000000000));
post = post + log(gampdf(JPTnu,7.1111111111111107,0.2812500000000000));
post = post + log(betapdf(JPTxip,14.1503999999999959,7.2895999999999974));
post = post + log(betapdf(JPTxiw,14.1503999999999959,7.2895999999999974));
post = post + log(gampdf(JPTchi,25.0000000000000000,0.2000000000000000));
post = post + log(gampdf(JPTSdd,16.0000000000000000,0.2500000000000000));
post = post + log(normpdf(JPTphipi,1.7000000000000000,0.3000000000000000));
post = post + log(betapdf(JPTrhoR,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhoz,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhog,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhomu,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhop,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhow,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTrhob,2.9999999999999991,1.9999999999999996));
post = post + log(betapdf(JPTthetap,2.6249999999999996,2.6249999999999996));
post = post + log(betapdf(JPTthetaw,2.6249999999999996,2.6249999999999996));
post = post + log((JPTsigmamp>0)*(gampdf(JPTsigmamp^(-2),1.0031793821761068,311.4123924248685285)*2/JPTsigmamp^3));
post = post + log((JPTsigmaz>0)*(gampdf(JPTsigmaz^(-2),1.0775398575622988,10.3172745624052755)*2/JPTsigmaz^3));
post = post + log((JPTsigmag>0)*(gampdf(JPTsigmag^(-2),1.0775398575619632,10.3172745624133650)*2/JPTsigmag^3));
post = post + log((JPTsigmamu>0)*(gampdf(JPTsigmamu^(-2),1.0775398575655253,10.3172745623274800)*2/JPTsigmamu^3));
post = post + log((JPTsigmap>0)*(gampdf(JPTsigmap^(-2),1.0031793821762656,311.4123924247325021)*2/JPTsigmap^3));
post = post + log((JPTsigmaw>0)*(gampdf(JPTsigmaw^(-2),1.0031793821761052,311.4123924248699495)*2/JPTsigmaw^3));
post = post + log((JPTsigmab>0)*(gampdf(JPTsigmab^(-2),1.0031793821761612,311.4123924248219168)*2/JPTsigmab^3));
if post==-inf, post = inf; return, end;


% Data

Data = [...
   1.0838600000000000, -0.0612400000000000, 0.2566700000000000;
   1.8014600000000001, 0.1163300000000000, 0.2466700000000000;
   2.6267800000000001, 0.3908400000000000, 0.3358300000000000;
   1.1246799999999999, 0.5470500000000000, 0.3750000000000000;
   1.0037300000000000, 0.7247700000000000, 0.4850000000000000;
   0.6268700000000000, 0.6597900000000000, 0.5891700000000000;
   -0.7067099999999999, 0.9756800000000000, 0.6208300000000000;
   0.1561300000000000, 0.9369300000000000, 0.6733300000000000;
   -0.2799700000000000, 1.1314100000000000, 0.7025000000000000;
   1.1193700000000000, 0.6012999999999999, 0.7316700000000000;
   0.5934600000000000, 1.1576700000000000, 0.7333300000000000;
   -0.5410800000000000, 0.6870900000000000, 0.7500000000000000;
   0.4345500000000000, 0.7779100000000000, 0.8083300000000000;
   -1.9743400000000000, 0.5320200000000000, 0.8133300000000000;
   -2.8337800000000000, 0.8453900000000000, 0.4658300000000000;
   0.2074000000000000, 0.4310600000000000, 0.2350000000000000;
   2.4230700000000001, 0.2478500000000000, 0.3308300000000000;
   2.2875000000000001, 0.1099600000000000, 0.5408300000000000;
   1.3924700000000001, 0.3729500000000000, 0.6425000000000000;
   1.9906200000000001, 0.2296600000000000, 0.7708300000000000;
   -0.5268699999999999, 0.3271700000000000, 0.8941700000000000;
   0.0271400000000000, 0.4183100000000000, 0.9975000000000001;
   1.7741899999999999, 0.2003800000000000, 0.9833300000000000;
   -0.8545400000000000, 0.4211200000000000, 0.9241700000000000;
   -0.2455300000000000, 0.4569000000000000, 0.7341700000000000;
   -1.7864899999999999, 0.4281300000000000, 0.5741700000000000;
   0.3253600000000000, 0.1280800000000000, 0.5008300000000000;
   1.5478799999999999, 0.1918200000000000, 0.4333300000000000;
   1.3619200000000000, 0.2604900000000000, 0.4208300000000000;
   1.9375000000000000, 0.2598200000000000, 0.6000000000000000;
   1.6425099999999999, 0.5702800000000000, 0.6141700000000000;
   0.6040200000000000, 0.2524200000000000, 0.6516700000000000;
   0.4348700000000000, 0.2675000000000000, 0.7116700000000000;
   -0.3592100000000000, 0.3555600000000000, 0.7308300000000000;
   0.7675000000000000, 0.2814600000000000, 0.7416700000000001;
   0.9027800000000000, 0.0988400000000000, 0.7408300000000000;
   1.4690700000000001, 0.1766300000000000, 0.8325000000000000;
   0.5044999999999999, 0.6002900000000000, 0.8633300000000000;
   1.7284800000000000, 0.3605100000000000, 0.8658300000000000;
   0.6834400000000000, 0.3387200000000000, 0.8725000000000001;
   0.8236500000000000, 0.4906500000000000, 0.8641700000000000;
   -0.1397400000000000, 0.4578100000000000, 0.8941700000000000;
   2.0881799999999999, 0.4254000000000000, 0.9933300000000000;
   0.9178800000000000, 0.4437300000000000, 1.0191699999999999;
   1.6172700000000000, 0.4367600000000000, 1.0183300000000000;
   2.0802000000000000, 0.6142500000000000, 1.0416700000000001;
   2.1903899999999998, 0.6105000000000000, 1.1391700000000000;
   -0.0517500000000000, 0.9455900000000000, 1.2283299999999999;
   0.4663000000000000, 0.9270200000000000, 1.3525000000000000;
   0.5513700000000000, 0.8751800000000000, 1.3908300000000000;
   0.5207800000000000, 0.4898400000000000, 1.2058300000000000;
   -0.4364300000000000, 0.6113300000000000, 0.9975000000000001;
   0.3699700000000000, 0.9100500000000000, 0.9733300000000000;
   0.3161500000000000, 1.0887000000000000, 1.0433300000000001;
   1.6626799999999999, 1.0769800000000000, 1.1966699999999999;
   1.2746800000000000, 1.1111700000000000, 1.4950000000000001;
   0.3010100000000000, 0.9588600000000000, 1.4858300000000000;
   -0.0324800000000000, 1.3789000000000000, 1.4791700000000001;
   1.1535299999999999, 1.0030699999999999, 1.6416700000000000;
   -0.1623900000000000, 1.3248700000000000, 2.0816699999999999;
   0.1796600000000000, 1.4408000000000001, 2.2458300000000002;
   -0.9098700000000000, 1.2465500000000000, 2.2349999999999999;
   -0.6496499999999999, 1.3777600000000001, 2.1433300000000002;
   -0.3975400000000000, 1.4250600000000000, 1.9700000000000000;
   0.3168100000000000, 0.7848300000000000, 1.6758299999999999;
   -1.6350899999999999, 1.2608500000000000, 1.3916700000000000;
   2.1682299999999999, 1.4963100000000000, 0.9641700000000000;
   -0.0306700000000000, 1.3289800000000001, 1.1408300000000000;
   0.2521700000000000, 0.9930500000000000, 1.3683300000000000;
   -0.2831400000000000, 0.7904900000000000, 1.1875000000000000;
   0.5548900000000000, 1.6232500000000001, 0.8850000000000000;
   1.8345800000000001, 0.5793400000000000, 1.0750000000000000;
   0.4757100000000000, 0.9095400000000000, 1.1850000000000001;
   1.2998099999999999, 1.1642500000000000, 1.2858300000000000;
   1.8886400000000001, 1.2969800000000000, 1.6341699999999999;
   0.5192500000000000, 1.6544900000000000, 1.9541700000000000;
   -1.0176900000000000, 1.8921500000000000, 2.6400000000000001;
   0.7090300000000000, 1.6978000000000000, 2.4991699999999999;
   -1.5339000000000000, 2.0434800000000002, 2.3308300000000002;
   -0.1107200000000000, 2.2152300000000000, 2.8125000000000000;
   -1.6389899999999999, 3.0661999999999998, 3.0225000000000000;
   -0.9907100000000000, 3.0405799999999998, 2.3366699999999998;
   -1.6994700000000000, 2.2785099999999998, 1.5758300000000001;
   0.3248900000000000, 1.4455499999999999, 1.3550000000000000;
   1.0964700000000001, 1.8482099999999999, 1.5400000000000000;
   0.8110700000000000, 1.7479300000000000, 1.3533299999999999;
   1.7336499999999999, 1.1169800000000001, 1.2066699999999999;
   0.3091200000000000, 1.0478499999999999, 1.2991699999999999;
   0.0258200000000000, 1.3317000000000001, 1.3208299999999999;
   0.3735800000000000, 1.6979500000000001, 1.2183299999999999;
   0.7212400000000000, 1.6668900000000000, 1.1650000000000000;
   1.3281300000000000, 1.5862300000000000, 1.2891699999999999;
   1.1260900000000000, 1.3722099999999999, 1.4550000000000001;
   0.0229500000000000, 1.6775500000000001, 1.6283300000000001;
   -0.2678500000000000, 1.6371500000000001, 1.6891700000000001;
   3.3367900000000001, 1.9108700000000001, 1.8208299999999999;
   0.4524300000000000, 1.7156199999999999, 2.0249999999999999;
   0.9181300000000000, 2.0167899999999999, 2.3958300000000001;
   -0.3281200000000000, 1.8187700000000000, 2.5183300000000002;
   -0.2954400000000000, 2.4039100000000002, 2.5449999999999999;
   0.3582400000000000, 2.0451700000000002, 2.7366700000000002;
   -0.2056500000000000, 1.9598800000000001, 3.3941699999999999;
   -0.1911700000000000, 2.1696599999999999, 3.7616700000000001;
   -2.4563899999999999, 2.2084500000000000, 3.1716700000000002;
   -0.5953300000000000, 2.2561399999999998, 2.4591699999999999;
   1.4404399999999999, 2.7786700000000000, 3.9633300000000000;
   1.6228300000000000, 2.5935700000000002, 4.1425000000000001;
   -1.0252399999999999, 1.7683700000000000, 4.4450000000000003;
   0.8020000000000000, 1.8210800000000000, 4.3941699999999999;
   -1.5117400000000001, 1.7289099999999999, 3.3966699999999999;
   -2.0017800000000001, 1.3986799999999999, 3.5566700000000000;
   0.2060200000000000, 1.2324999999999999, 3.6283300000000001;
   -0.6415600000000000, 1.3787100000000001, 2.7516699999999998;
   -0.2024100000000000, 1.0558000000000001, 2.3216700000000001;
   0.9301500000000000, 0.8517900000000000, 2.1633300000000002;
   1.9610500000000000, 0.7278600000000000, 2.2008299999999998;
   1.6708799999999999, 1.0146700000000000, 2.3650000000000002;
   1.7694799999999999, 0.7204700000000001, 2.3574999999999999;
   1.5335600000000000, 1.2345100000000000, 2.4216700000000002;
   1.4125200000000000, 0.8979500000000000, 2.6391700000000000;
   0.6886000000000000, 0.8134700000000000, 2.8475000000000001;
   0.5557500000000000, 0.5888400000000000, 2.3166699999999998;
   0.6852500000000000, 1.1363099999999999, 2.1191700000000000;
   0.6601900000000001, 0.5121200000000000, 1.9808300000000001;
   1.2228100000000000, 0.4739000000000000, 1.9750000000000001;
   0.5015500000000001, 0.6117600000000000, 2.0258300000000000;
   0.4654100000000000, 0.5056200000000000, 1.9566699999999999;
   0.1533200000000000, 0.4983000000000000, 1.7300000000000000;
   0.6137800000000000, 0.6289000000000000, 1.5516700000000001;
   0.1377700000000000, 0.7209000000000000, 1.5666700000000000;
   0.3484000000000000, 0.7828200000000000, 1.5549999999999999;
   0.7781400000000001, 0.5598600000000000, 1.6625000000000001;
   0.5939300000000000, 0.7847300000000000, 1.7108300000000001;
   1.4981700000000000, 0.7144700000000000, 1.7291700000000001;
   0.2597200000000000, 0.8003800000000000, 1.6658299999999999;
   1.0239300000000000, 0.9592800000000000, 1.7891699999999999;
   0.2137700000000000, 1.1788900000000000, 1.9958300000000000;
   1.0551100000000000, 0.8037900000000000, 2.1175000000000002;
   0.7407600000000000, 1.0394300000000001, 2.3608300000000000;
   0.5163900000000000, 0.9912600000000000, 2.4316700000000000;
   0.5404800000000000, 0.6754700000000000, 2.2708300000000001;
   0.0275500000000000, 0.6282500000000000, 2.1533300000000000;
   0.2325400000000000, 1.2068200000000000, 2.0625000000000000;
   0.1858500000000000, 1.1562900000000000, 2.0608300000000002;
   -0.2415500000000000, 0.9243200000000000, 2.0400000000000000;
   -1.1698400000000000, 0.8202700000000001, 1.9358299999999999;
   -0.6939100000000000, 1.0639600000000000, 1.6066700000000000;
   0.4822100000000000, 0.6977000000000000, 1.4658300000000000;
   0.1973300000000000, 0.7541700000000000, 1.4108300000000000;
   0.1286700000000000, 0.5645600000000000, 1.2041700000000000;
   0.8139500000000000, 0.5640300000000000, 1.0058300000000000;
   0.8556600000000000, 0.5936100000000000, 0.9425000000000000;
   0.7785400000000000, 0.4429000000000000, 0.8141699999999999;
   0.7403300000000000, 0.5667700000000000, 0.7591700000000000;
   -0.0846800000000000, 0.6125400000000000, 0.7600000000000000;
   0.4143900000000000, 0.5422000000000000, 0.7500000000000000;
   0.2533400000000000, 0.4691600000000000, 0.7650000000000000;
   1.0582000000000000, 0.5177300000000000, 0.7475000000000001;
   0.7068800000000000, 0.5491400000000000, 0.8033300000000000;
   1.1292199999999999, 0.4821200000000000, 0.9850000000000000;
   0.4064200000000000, 0.5597600000000000, 1.1216699999999999;
   0.8130500000000001, 0.5268300000000000, 1.2916700000000001;
   0.0784900000000000, 0.5969500000000000, 1.4524999999999999;
   0.0022800000000000, 0.4447700000000000, 1.5049999999999999;
   0.6252900000000000, 0.4232200000000000, 1.4491700000000001;
   0.4152200000000000, 0.5116000000000001, 1.4299999999999999;
   0.5090800000000000, 0.5392800000000000, 1.3408300000000000;
   1.4756000000000000, 0.3687700000000000, 1.3108299999999999;
   0.4034900000000000, 0.4936000000000000, 1.3266700000000000;
   0.8788100000000000, 0.4565100000000000, 1.3200000000000001;
   0.4396000000000000, 0.5067800000000000, 1.3191700000000000;
   1.0412900000000000, 0.4450400000000000, 1.3808300000000000;
   1.0546400000000000, 0.2790700000000000, 1.3833299999999999;
   0.4751300000000000, 0.3783300000000000, 1.3766700000000001;
   0.7351100000000000, 0.1492900000000000, 1.3799999999999999;
   0.6374400000000000, 0.2463700000000000, 1.3750000000000000;
   1.0391200000000000, 0.3730800000000000, 1.3833299999999999;
   1.4566100000000000, 0.2623100000000000, 1.2150000000000001;
   0.5326800000000000, 0.4229100000000000, 1.1833300000000000;
   0.4418400000000000, 0.4199800000000000, 1.1866699999999999;
   0.9897800000000000, 0.3503600000000000, 1.2733300000000001;
   1.4267200000000000, 0.4087400000000000, 1.3266700000000000;
   -1.0961600000000000, 0.7579300000000000, 1.4191700000000000;
   1.6209899999999999, 0.5070200000000000, 1.5683300000000000;
   -0.2217100000000000, 0.5888500000000000, 1.6299999999999999;
   0.3075900000000000, 0.5059800000000000, 1.6183300000000000;
   -0.5941900000000000, 0.6892100000000000, 1.3983300000000001;
   0.3418200000000000, 0.6933200000000000, 1.0816699999999999;
   -0.5986200000000000, 0.3173700000000000, 0.8741700000000000;
   0.0591200000000000, 0.2779700000000000, 0.5333300000000000;
   0.5920500000000000, 0.3559400000000000, 0.4333300000000000;
   0.2887000000000000, 0.4407100000000000, 0.4375000000000000;
   0.1879700000000000, 0.4441900000000000, 0.4350000000000000;
   -0.2924700000000000, 0.5899200000000000, 0.3608300000000000;
   -0.3144000000000000, 0.7223800000000000, 0.3125000000000000;
   0.4940200000000000, 0.2979500000000000, 0.3116700000000000;
   1.3331100000000000, 0.5572000000000000, 0.2541700000000000;
   0.5360500000000000, 0.5382900000000000, 0.2491700000000000;
   0.6828400000000000, 0.8517300000000000, 0.2508300000000000;
   0.4223600000000000, 0.8507600000000000, 0.2533300000000000;
   0.4057900000000000, 0.7283600000000000, 0.3600000000000000;
   0.5480000000000000, 0.7363800000000000, 0.4866700000000000;
   0.7115000000000000, 0.9255700000000000, 0.6183300000000000;
   0.1440300000000000, 0.6770300000000000, 0.7350000000000000;
   0.4234100000000000, 1.0254399999999999, 0.8650000000000000;
   0.1809800000000000, 0.8345700000000000, 0.9933300000000000;
   1.0566500000000001, 0.7463800000000000, 1.1141700000000001;
   0.0587900000000000, 0.8866100000000000, 1.2250000000000001;
   -0.2939600000000000, 0.7574700000000000, 1.3125000000000000;
   0.3985100000000000, 0.4557700000000000, 1.3116699999999999;
   -0.1873900000000000, 1.0772900000000001, 1.3141700000000001;
   0.5184200000000000, 0.7771100000000000, 1.3125000000000000;
   0.2618100000000000, 0.4894400000000000, 1.2683300000000000;
   0.4068700000000000, 0.2162400000000000, 1.1241699999999999;
   -0.1645500000000000, 0.4794900000000000, 0.7941700000000000;
   -0.0426000000000000, 0.7796100000000000, 0.5216700000000000;
   -1.3047100000000000, 1.0955999999999999, 0.4850000000000000;
   -2.0478900000000002, -0.3055200000000000, 0.1266700000000000;
   -1.3238000000000001, 0.2845100000000000, 0.0458300000000000;
   -0.4228700000000000, 0.0821800000000000, 0.0450000000000000;
   0.1148900000000000, 0.1860300000000000, 0.0391700000000000;
  ];

%% Get Mats
[Mats]=NoGapReMats(x,2,1,fid,OpList{:});
if ~all(Mats.REE.eu==1)||Mats.KF.sig00rc~=0,post = inf;return,end

%% Kalman Filter

stt = Mats.KF.s00;
sigtt = Mats.KF.sig00;
StateVartt = zeros(52,221);
SIGtt = zeros(52,52,221);
for t=1:221;
  idxNoNaN = ~isnan(Data(t,:));
  [stt,sigtt,lh,ObsVarhat]=kf(Data(t,idxNoNaN)'-Mats.KF.ObsVarBar(idxNoNaN),...
    Mats.ObsEq.H(idxNoNaN,:),stt,sigtt,Mats.REE.G1,Mats.REE.G2);
  if t>132
    post=post+lh*[1;1];
  end
  StateVartt(:,t) = stt;
  SIGtt(:,:,t) = sigtt;
end

% Add normalization
post = -( post - 267/2*log(2*pi) );

%% Provide additional optional output
if nargout>1
  varargout = {StateVartt,SIGtt,Mats};
end

